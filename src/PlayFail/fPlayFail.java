/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlayFail;

import Vigenere.fVigenere;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author lengo
 */
public class fPlayFail extends javax.swing.JFrame {

    /**
     * Creates new form fPlayFail
     */
    public fPlayFail() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEn = new javax.swing.JButton();
        btnGhi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCt = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnMo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnDe = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEn.setText("Encrypt");
        btnEn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnActionPerformed(evt);
            }
        });

        btnGhi.setText("Ghi file");
        btnGhi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGhiActionPerformed(evt);
            }
        });

        txtCt.setColumns(20);
        txtCt.setRows(5);
        jScrollPane2.setViewportView(txtCt);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Thuật toán mã hóa Play Fail");

        btnMo.setText("Mở file");
        btnMo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setText("Plain Text");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel4.setText("Cipher Text");

        btnDe.setText("Decrypt");
        btnDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeActionPerformed(evt);
            }
        });

        txtPt.setColumns(20);
        txtPt.setRows(5);
        jScrollPane1.setViewportView(txtPt);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(btnEn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGhi)
                                .addGap(69, 69, 69))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(btnDe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnMo)
                                .addGap(60, 60, 60))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(120, 120, 120))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEn)
                    .addComponent(btnGhi))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel4)
                        .addGap(77, 77, 77))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMo)
                    .addComponent(btnDe))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String findIndex(String[][] arr, String test) {
        String index = "";
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[i].length; j++) {
                if (test.equalsIgnoreCase(arr[i][j])) {
                    index = String.valueOf(i) + String.valueOf(j);
                    return index;
                }
            }
        }
        return null;
    }

    private void btnMoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoActionPerformed
        // TODO add your handling code here:
        try {
            BufferedReader br = null;
            String filename = "D:\\dulieu.txt";
            br = new BufferedReader(new FileReader(filename));
            StringBuffer sb = new StringBuffer();
            JOptionPane.showMessageDialog(null, "Đã mở file thành công!!!");
            char[] ca = new char[5];
            while (br.ready()) {
                int len = br.read(ca);
                sb.append(ca, 0, len);
            }
            br.close();
            String chuoi = sb.toString();
            txtCt.setText(chuoi);
        } catch (IOException ex) {
            Logger.getLogger(fPlayFail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMoActionPerformed

    private void btnGhiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGhiActionPerformed
        // TODO add your handling code here:
        try {
            BufferedWriter bw = null;
            String filename = "D:\\dulieu.txt";
            String s = txtCt.getText();
            bw = new BufferedWriter(new FileWriter(filename));
            bw.write(s);
            bw.close();
            JOptionPane.showMessageDialog(null, "Đã ghi file thành công!!!!");
        } catch (IOException ex) {
            Logger.getLogger(fPlayFail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGhiActionPerformed

    private void btnEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnActionPerformed
        // TODO add your handling code here:
        String plainText = "", plainTXT, cipherText = "";
        String playFairMatrix[][] = {
            {"M", "O", "N", "A", "R"},
            {"C", "H", "Y", "B", "D"},
            {"E", "F", "G", "I", "K"},
            {"L", "P", "Q", "S", "T"},
            {"U", "V", "W", "X", "Z"},};
        plainTXT = txtPt.getText();
        String temp = "";
        String arr[] = plainTXT.split(" ");
        for (int j = 0; j < arr.length; j++) {
            temp = arr[j];
            if (temp.length() % 2 != 0) {
                temp = temp + "x";
            }
            plainText = plainText + temp + " ";
        }

        for (int i = 0; i < plainText.length(); i += 2) {
            char c = plainText.charAt(i);
            char d = plainText.charAt(i);
            if (i + 1 < plainText.length()) {
                d = plainText.charAt(i + 1);
            }
            String val = String.valueOf(c);
            String vald = String.valueOf(d);
            String index1, index2;
            if (val.equals(" ")) {
                cipherText = cipherText + " ";
                i--;
                continue;
            } else {
                if (val.equalsIgnoreCase("J")) {
                    index1 = findIndex(playFairMatrix, String.valueOf("I"));
                } else {
                    index1 = findIndex(playFairMatrix, String.valueOf(plainText.charAt(i)));
                }
                if (vald.equalsIgnoreCase("J")) {
                    index2 = findIndex(playFairMatrix, String.valueOf("I"));
                } else {
                    index2 = findIndex(playFairMatrix, String.valueOf(plainText.charAt(i + 1)));
                }
                if (index1.charAt(0) == index2.charAt(0)) {
                    int m = Integer.parseInt(String.valueOf(index1.charAt(1)));
                    int n = Integer.parseInt(String.valueOf(index2.charAt(1)));
                    int o = Integer.parseInt(String.valueOf(index1.charAt(0)));
                    int p = Integer.parseInt(String.valueOf(index2.charAt(0)));
                    if (m == 4) {
                        m = -1;
                    }
                    if (n == 4) {
                        n = -1;
                    }
                    cipherText = cipherText + playFairMatrix[o][m + 1];
                    cipherText = cipherText + playFairMatrix[p][n + 1];
                } else if (index1.charAt(1) == index2.charAt(1)) {
                    int o = Integer.parseInt(String.valueOf(index1.charAt(0)));
                    int m = Integer.parseInt(String.valueOf(index1.charAt(1)));
                    int p = Integer.parseInt(String.valueOf(index2.charAt(0)));
                    int n = Integer.parseInt(String.valueOf(index2.charAt(1)));
                    if (p > 3) {
                        p = -1;
                    }
                    if (o > 3) {
                        o = -1;
                    }
                    cipherText = cipherText + playFairMatrix[o + 1][m];
                    cipherText = cipherText + playFairMatrix[p + 1][n];
                } else {
                    int o = Integer.parseInt(String.valueOf(index1.charAt(0)));
                    int m = Integer.parseInt(String.valueOf(index1.charAt(1)));
                    int p = Integer.parseInt(String.valueOf(index2.charAt(0)));
                    int n = Integer.parseInt(String.valueOf(index2.charAt(1)));
                    cipherText = cipherText + playFairMatrix[o][n];
                    cipherText = cipherText + playFairMatrix[p][m];
                }
            }
        }
        txtCt.setText(cipherText.toString().toUpperCase());
    }//GEN-LAST:event_btnEnActionPerformed

    private void btnDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeActionPerformed
        // TODO add your handling code here:
        String plainText = "", cipherText = "";
        String playFairMatrix[][] = {
            {"M", "O", "N", "A", "R"},
            {"C", "H", "Y", "B", "D"},
            {"E", "F", "G", "I", "K"},
            {"L", "P", "Q", "S", "T"},
            {"U", "V", "W", "X", "Z"},};

        cipherText = txtCt.getText();
        txtCt.setText(cipherText.toString().toUpperCase());
        for (int i = 0; i < cipherText.length(); i += 2) {
            char c = cipherText.charAt(i);
            char d = cipherText.charAt(i);
            if (i + 1 < cipherText.length()) {
                d = cipherText.charAt(i + 1);
            }
            String val = String.valueOf(c);
            String vald = String.valueOf(d);
            String index1, index2;
            if (val.equals(" ")) {
                plainText = plainText + " ";
                i--;
                continue;
            } else {
                if(val.equalsIgnoreCase("J")){
                    index1 = findIndex(playFairMatrix, String.valueOf("I"));
                }
                else{
                    index1 = findIndex(playFairMatrix, String.valueOf(cipherText.charAt(i)));
                }
                if(vald.equalsIgnoreCase("J")){
                    index2 = findIndex(playFairMatrix, String.valueOf("I"));
                }
                else{
                    index2 = findIndex(playFairMatrix, String.valueOf(cipherText.charAt(i)));
                }
                if(index1.charAt(0) == index2.charAt(0)){
                    int m = Integer.parseInt(String.valueOf(index1.charAt(1)));
                    int n = Integer.parseInt(String.valueOf(index2.charAt(1)));
                    int o = Integer.parseInt(String.valueOf(index1.charAt(0)));
                    int p = Integer.parseInt(String.valueOf(index2.charAt(0)));
                    if(m==0){
                        m = 5;
                    }
                    if(n == 0){
                        n = 5;
                    }
                    plainText = plainText + playFairMatrix[0-1][m];
                    plainText = plainText + playFairMatrix[p-1][n];
                }
                else
                {
                    int o = Integer.parseInt(String.valueOf(index1.charAt(0)));
                    int m = Integer.parseInt(String.valueOf(index1.charAt(1)));
                    int p = Integer.parseInt(String.valueOf(index2.charAt(0)));
                    int n = Integer.parseInt(String.valueOf(index2.charAt(1)));
                    plainText = plainText + playFairMatrix[o][n];
                    plainText = plainText + playFairMatrix[p][m];
                }
            }
        }
        txtPt.setText(plainText.toString().toUpperCase());
    }//GEN-LAST:event_btnDeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fPlayFail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fPlayFail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fPlayFail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fPlayFail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fPlayFail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDe;
    private javax.swing.JButton btnEn;
    private javax.swing.JButton btnGhi;
    private javax.swing.JButton btnMo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtCt;
    private javax.swing.JTextArea txtPt;
    // End of variables declaration//GEN-END:variables
}
